# Code generated by "wunderctl"; DO NOT EDIT.

"""
The @removeNullVariables directive allows you to remove variables with null value from your GraphQL Query or Mutation Operations.

A potential use-case could be that you have a graphql upstream which is not accepting null values for variables.
By enabling this directive all variables with null values will be removed from upstream query.

query ($say: String, $name: String) @removeNullVariables {
	hello(say: $say, name: $name)
}

Directive will transform variables json and remove top level null values.
{ "say": null, "name": "world" }

So upstream will receive the following variables:

{ "name": "world" }
"""
directive @removeNullVariables on QUERY | MUTATION

directive @hooksVariable on VARIABLE_DEFINITION

directive @jsonSchema(
  """
  The value of both of these keywords MUST be a string.
  
  Both of these keywords can be used to decorate a user interface with
  information about the data produced by this user interface.  A title
  will preferably be short, whereas a description will provide
  explanation about the purpose of the instance described by this
  schema.
  """
  title: String
  """
  The value of both of these keywords MUST be a string.
  
  Both of these keywords can be used to decorate a user interface with
  information about the data produced by this user interface.  A title
  will preferably be short, whereas a description will provide
  explanation about the purpose of the instance described by this
  schema.
  """
  description: String
  """
  The value of "multipleOf" MUST be a number, strictly greater than 0.
  
  A numeric instance is valid only if division by this keyword's value
  results in an integer.
  """
  multipleOf: Int
  """
  The value of "maximum" MUST be a number, representing an inclusive
  upper limit for a numeric instance.
  
  If the instance is a number, then this keyword validates only if the
  instance is less than or exactly equal to "maximum".
  """
  maximum: Int
  """
  The value of "exclusiveMaximum" MUST be number, representing an
  exclusive upper limit for a numeric instance.
  
  If the instance is a number, then the instance is valid only if it
  has a value strictly less than (not equal to) "exclusiveMaximum".
  """
  exclusiveMaximum: Int
  """
  The value of "minimum" MUST be a number, representing an inclusive
  lower limit for a numeric instance.
  
  If the instance is a number, then this keyword validates only if the
  instance is greater than or exactly equal to "minimum".
  """
  minimum: Int
  """
  The value of "exclusiveMinimum" MUST be number, representing an
  exclusive lower limit for a numeric instance.
  
  If the instance is a number, then the instance is valid only if it
  has a value strictly greater than (not equal to) "exclusiveMinimum".
  """
  exclusiveMinimum: Int
  """
  The value of this keyword MUST be a non-negative integer.
  
  A string instance is valid against this keyword if its length is less
  than, or equal to, the value of this keyword.
  
  The length of a string instance is defined as the number of its
  characters as defined by RFC 7159 [RFC7159].
  """
  maxLength: Int
  """
  The value of this keyword MUST be a non-negative integer.
  
  A string instance is valid against this keyword if its length is
  greater than, or equal to, the value of this keyword.
  
  The length of a string instance is defined as the number of its
  characters as defined by RFC 7159 [RFC7159].
  
  Omitting this keyword has the same behavior as a value of 0.
  """
  minLength: Int
  """
  The value of this keyword MUST be a string.  This string SHOULD be a
  valid regular expression, according to the ECMA 262 regular
  expression dialect.
  
  A string instance is considered valid if the regular expression
  matches the instance successfully.  Recall: regular expressions are
  not implicitly anchored.
  """
  pattern: String
  """
  The value of this keyword MUST be a non-negative integer.
  
  An array instance is valid against "maxItems" if its size is less
  than, or equal to, the value of this keyword.
  """
  maxItems: Int
  """
  The value of this keyword MUST be a non-negative integer.
  
  An array instance is valid against "minItems" if its size is greater
  than, or equal to, the value of this keyword.
  
  Omitting this keyword has the same behavior as a value of 0.
  """
  minItems: Int
  """
  The value of this keyword MUST be a boolean.
  
  If this keyword has boolean value false, the instance validates
  successfully.  If it has boolean value true, the instance validates
  successfully if all of its elements are unique.
  
  Omitting this keyword has the same behavior as a value of false.
  """
  uniqueItems: Boolean
  commonPattern: COMMON_REGEX_PATTERN
  """Optional field to apply the JSON schema to"""
  on: String
) repeatable on VARIABLE_DEFINITION

directive @rbac(
  """the user must match all roles"""
  requireMatchAll: [WG_ROLE]
  """the user must match at least one of the roles"""
  requireMatchAny: [WG_ROLE]
  """the user must not match all of the roles"""
  denyMatchAll: [WG_ROLE]
  """the user must not match any of the roles"""
  denyMatchAny: [WG_ROLE]
) on QUERY | MUTATION | SUBSCRIPTION

"""
The @fromClaim directive sets the variable to the value retrieved from the given a claim.
Adding this directive makes the operation require authentication.
"""
directive @fromClaim(name: WG_CLAIM, on: String = "") repeatable on VARIABLE_DEFINITION

"""
The directive @injectCurrentDateTime injects a DateTime string of the current date and time into the variable.
This variable MUST be a string compatible scalar. 

The default format, is: ISO 8601
If no format is chosen, the default format is used.
Custom formats are allowed by specifying a format conforming to the Golang specification for specifying a date time format.
"""
directive @injectCurrentDateTime(
  format: WunderGraphDateTimeFormat = ISO8601
  """
  customFormat must conform to the Golang specification for specifying a date time format
  """
  customFormat: String
  on: String = ""
) repeatable on VARIABLE_DEFINITION

"""
The directive @injectGeneratedUUID injects a generated UUID into the variable.
This variable MUST be a string.
At the same time, it removes the variable from the input definition,
disallowing the user to supply it.

This means, the UUID is 100% generated server-side and can be considered untempered.
"""
directive @injectGeneratedUUID(on: String = "") repeatable on VARIABLE_DEFINITION

"""
The @internalOperation Directive marks an Operation as internal.
By doing so, the Operation is no longer accessible from the public API.
It can only be accessed by internal services, like hooks.
"""
directive @internalOperation on QUERY | MUTATION | SUBSCRIPTION

"""
The directive @injectEnvironmentVariable allows you to inject an environment variable into the variable definition.
"""
directive @injectEnvironmentVariable(name: String!, on: String = "") repeatable on VARIABLE_DEFINITION

"""
The @export directive instructs the Execution Planner to export the field during the execution into the variable of the 'as' argument.
As the execution is depth first, a field can only be used after it has been exported.
Additionally, a field can only be used after using the '_join' field or on a different data source.
It's not possible to export a field and use it in for the same data source.

Note that the @export directive only works on fields that return a single value.
It's not possible to export a list or object field.
"""
directive @export(
  """The argument 'as' is the name of the variable to export the field to."""
  as: String!
) on FIELD

"""
The directive @internal marks a variable definition as internal so that clients can't access it.
The field is also not visible in the public API.
It's only being used as an internal variable to export fields into.
"""
directive @internal on VARIABLE_DEFINITION

"""
The @transform directive allows to apply transformations to the response.
By applying the directive, the shape of the response can be altered,
which will also modify the JSON-Schema of the response.
That is, you will keep full type safety and code-generation for transformed fields.
"""
directive @transform(
  """
  Using the 'get' transformation allows you to extract a nested field using a JSON path.
  This is useful to unnest data, e.g. when using the '_join' field, which adds an extra layer of nesting.
  
  Example:
  
  query GetName {
      name: me @transform(get: "info.name") {
          info {
              name
          }
      }
  }
  
  Before the transformation, the resolve looks like this:
  
  {
      "name": {
          "info": {
              "name": "John Doe"
          }
      }
  }
  
  With the transformation applied, the response will be reshaped like this:
  
  {
      "name": "John Doe"
  }
  """
  get: String
) on FIELD

input tenant1_NestedBigIntFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: tenant1_NestedBigIntFilter
}

input tenant1_BigIntFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: tenant1_NestedBigIntFilter
}

enum tenant1_QueryMode {
  default
  insensitive
}

input tenant1_NestedStringNullableFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: tenant1_NestedStringNullableFilter
}

input tenant1_StringNullableFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: tenant1_QueryMode
  not: tenant1_NestedStringNullableFilter
}

input tenant1_NestedDecimalNullableFilter {
  equals: Float
  in: [Float]
  notIn: [Float]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: tenant1_NestedDecimalNullableFilter
}

input tenant1_DecimalNullableFilter {
  equals: Float
  in: [Float]
  notIn: [Float]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: tenant1_NestedDecimalNullableFilter
}

input tenant1_NestedDateTimeNullableFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: tenant1_NestedDateTimeNullableFilter
}

input tenant1_DateTimeNullableFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: tenant1_NestedDateTimeNullableFilter
}

input tenant1_NestedBigIntNullableFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: tenant1_NestedBigIntNullableFilter
}

input tenant1_BigIntNullableFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: tenant1_NestedBigIntNullableFilter
}

input tenant1_A1_CustomerPaymentsWhereInput {
  AND: tenant1_A1_CustomerPaymentsWhereInput
  OR: [tenant1_A1_CustomerPaymentsWhereInput]
  NOT: tenant1_A1_CustomerPaymentsWhereInput
  record_id: tenant1_BigIntFilter
  CustomerName: tenant1_StringNullableFilter
  CustomerID: tenant1_StringNullableFilter
  ReceivablesCriteria: tenant1_StringNullableFilter
  ReceivablesCOA: tenant1_StringNullableFilter
  ReceivablesCOAID: tenant1_StringNullableFilter
  AmountReceived: tenant1_DecimalNullableFilter
  PaymentDate: tenant1_DateTimeNullableFilter
  PaymentNumber: tenant1_StringNullableFilter
  PaymentMode: tenant1_StringNullableFilter
  DepostiAccountcriteria: tenant1_StringNullableFilter
  DepositTo: tenant1_StringNullableFilter
  DepositToCOAID: tenant1_StringNullableFilter
  Reference: tenant1_StringNullableFilter
  TaxDeducted: tenant1_StringNullableFilter
  TdsTaxAccount: tenant1_StringNullableFilter
  TdsTaxAccountCOAID: tenant1_StringNullableFilter
  TransactionReferenceNumber: tenant1_StringNullableFilter
  AmountUsedForPayments: tenant1_DecimalNullableFilter
  WithHoldingTaxPaid: tenant1_DecimalNullableFilter
  BalanceDue: tenant1_DecimalNullableFilter
  AmountInExcess: tenant1_DecimalNullableFilter
  DoYouWantToRefundExcessAmountReceived: tenant1_StringNullableFilter
  AmountRefunded: tenant1_DecimalNullableFilter
  NotifyCustomer: tenant1_StringNullableFilter
  NotificationMode: tenant1_StringNullableFilter
  NotificationMessage: tenant1_StringNullableFilter
  UserName: tenant1_StringNullableFilter
  UserMobileNumber: tenant1_StringNullableFilter
  UserEmail: tenant1_StringNullableFilter
  Attachments: tenant1_StringNullableFilter
  Notes: tenant1_StringNullableFilter
  InstrumentRefNo: tenant1_StringNullableFilter
  DateOfReceipt: tenant1_DateTimeNullableFilter
  SourceDetails: tenant1_StringNullableFilter
  parent_id: tenant1_BigIntNullableFilter
  org_unit_id: tenant1_BigIntNullableFilter
  owner_id: tenant1_BigIntNullableFilter
  audit_data: tenant1_StringNullableFilter
  updated_at: tenant1_BigIntNullableFilter
}

enum tenant1_SortOrder {
  asc
  desc
}

input tenant1_A1_CustomerPaymentsOrderByWithRelationInput {
  record_id: tenant1_SortOrder
  CustomerName: tenant1_SortOrder
  CustomerID: tenant1_SortOrder
  ReceivablesCriteria: tenant1_SortOrder
  ReceivablesCOA: tenant1_SortOrder
  ReceivablesCOAID: tenant1_SortOrder
  AmountReceived: tenant1_SortOrder
  PaymentDate: tenant1_SortOrder
  PaymentNumber: tenant1_SortOrder
  PaymentMode: tenant1_SortOrder
  DepostiAccountcriteria: tenant1_SortOrder
  DepositTo: tenant1_SortOrder
  DepositToCOAID: tenant1_SortOrder
  Reference: tenant1_SortOrder
  TaxDeducted: tenant1_SortOrder
  TdsTaxAccount: tenant1_SortOrder
  TdsTaxAccountCOAID: tenant1_SortOrder
  TransactionReferenceNumber: tenant1_SortOrder
  AmountUsedForPayments: tenant1_SortOrder
  WithHoldingTaxPaid: tenant1_SortOrder
  BalanceDue: tenant1_SortOrder
  AmountInExcess: tenant1_SortOrder
  DoYouWantToRefundExcessAmountReceived: tenant1_SortOrder
  AmountRefunded: tenant1_SortOrder
  NotifyCustomer: tenant1_SortOrder
  NotificationMode: tenant1_SortOrder
  NotificationMessage: tenant1_SortOrder
  UserName: tenant1_SortOrder
  UserMobileNumber: tenant1_SortOrder
  UserEmail: tenant1_SortOrder
  Attachments: tenant1_SortOrder
  Notes: tenant1_SortOrder
  InstrumentRefNo: tenant1_SortOrder
  DateOfReceipt: tenant1_SortOrder
  SourceDetails: tenant1_SortOrder
  parent_id: tenant1_SortOrder
  org_unit_id: tenant1_SortOrder
  owner_id: tenant1_SortOrder
  audit_data: tenant1_SortOrder
  updated_at: tenant1_SortOrder
}

input tenant1_A1_CustomerPaymentsWhereUniqueInput {
  record_id: BigInt
}

enum tenant1_A1_CustomerPaymentsScalarFieldEnum {
  record_id
  CustomerName
  CustomerID
  ReceivablesCriteria
  ReceivablesCOA
  ReceivablesCOAID
  AmountReceived
  PaymentDate
  PaymentNumber
  PaymentMode
  DepostiAccountcriteria
  DepositTo
  DepositToCOAID
  Reference
  TaxDeducted
  TdsTaxAccount
  TdsTaxAccountCOAID
  TransactionReferenceNumber
  AmountUsedForPayments
  WithHoldingTaxPaid
  BalanceDue
  AmountInExcess
  DoYouWantToRefundExcessAmountReceived
  AmountRefunded
  NotifyCustomer
  NotificationMode
  NotificationMessage
  UserName
  UserMobileNumber
  UserEmail
  Attachments
  Notes
  InstrumentRefNo
  DateOfReceipt
  SourceDetails
  parent_id
  org_unit_id
  owner_id
  audit_data
  updated_at
}

type tenant1_A1_CustomerPayments {
  record_id: BigInt!
  CustomerName: String
  CustomerID: String
  ReceivablesCriteria: String
  ReceivablesCOA: String
  ReceivablesCOAID: String
  AmountReceived: Float
  PaymentDate: DateTime
  PaymentNumber: String
  PaymentMode: String
  DepostiAccountcriteria: String
  DepositTo: String
  DepositToCOAID: String
  Reference: String
  TaxDeducted: String
  TdsTaxAccount: String
  TdsTaxAccountCOAID: String
  TransactionReferenceNumber: String
  AmountUsedForPayments: Float
  WithHoldingTaxPaid: Float
  BalanceDue: Float
  AmountInExcess: Float
  DoYouWantToRefundExcessAmountReceived: String
  AmountRefunded: Float
  NotifyCustomer: String
  NotificationMode: String
  NotificationMessage: String
  UserName: String
  UserMobileNumber: String
  UserEmail: String
  Attachments: String
  Notes: String
  InstrumentRefNo: String
  DateOfReceipt: DateTime
  SourceDetails: String
  parent_id: BigInt
  org_unit_id: BigInt
  owner_id: BigInt
  audit_data: String
  updated_at: BigInt
  _join: Query!
}

type tenant1_A1_CustomerPaymentsCountAggregateOutputType {
  record_id: Int!
  CustomerName: Int!
  CustomerID: Int!
  ReceivablesCriteria: Int!
  ReceivablesCOA: Int!
  ReceivablesCOAID: Int!
  AmountReceived: Int!
  PaymentDate: Int!
  PaymentNumber: Int!
  PaymentMode: Int!
  DepostiAccountcriteria: Int!
  DepositTo: Int!
  DepositToCOAID: Int!
  Reference: Int!
  TaxDeducted: Int!
  TdsTaxAccount: Int!
  TdsTaxAccountCOAID: Int!
  TransactionReferenceNumber: Int!
  AmountUsedForPayments: Int!
  WithHoldingTaxPaid: Int!
  BalanceDue: Int!
  AmountInExcess: Int!
  DoYouWantToRefundExcessAmountReceived: Int!
  AmountRefunded: Int!
  NotifyCustomer: Int!
  NotificationMode: Int!
  NotificationMessage: Int!
  UserName: Int!
  UserMobileNumber: Int!
  UserEmail: Int!
  Attachments: Int!
  Notes: Int!
  InstrumentRefNo: Int!
  DateOfReceipt: Int!
  SourceDetails: Int!
  parent_id: Int!
  org_unit_id: Int!
  owner_id: Int!
  audit_data: Int!
  updated_at: Int!
  _all: Int!
  _join: Query!
}

type tenant1_A1_CustomerPaymentsAvgAggregateOutputType {
  record_id: Float
  AmountReceived: Float
  AmountUsedForPayments: Float
  WithHoldingTaxPaid: Float
  BalanceDue: Float
  AmountInExcess: Float
  AmountRefunded: Float
  parent_id: Float
  org_unit_id: Float
  owner_id: Float
  updated_at: Float
  _join: Query!
}

type tenant1_A1_CustomerPaymentsSumAggregateOutputType {
  record_id: BigInt
  AmountReceived: Float
  AmountUsedForPayments: Float
  WithHoldingTaxPaid: Float
  BalanceDue: Float
  AmountInExcess: Float
  AmountRefunded: Float
  parent_id: BigInt
  org_unit_id: BigInt
  owner_id: BigInt
  updated_at: BigInt
  _join: Query!
}

type tenant1_A1_CustomerPaymentsMinAggregateOutputType {
  record_id: BigInt
  CustomerName: String
  CustomerID: String
  ReceivablesCriteria: String
  ReceivablesCOA: String
  ReceivablesCOAID: String
  AmountReceived: Float
  PaymentDate: DateTime
  PaymentNumber: String
  PaymentMode: String
  DepostiAccountcriteria: String
  DepositTo: String
  DepositToCOAID: String
  Reference: String
  TaxDeducted: String
  TdsTaxAccount: String
  TdsTaxAccountCOAID: String
  TransactionReferenceNumber: String
  AmountUsedForPayments: Float
  WithHoldingTaxPaid: Float
  BalanceDue: Float
  AmountInExcess: Float
  DoYouWantToRefundExcessAmountReceived: String
  AmountRefunded: Float
  NotifyCustomer: String
  NotificationMode: String
  NotificationMessage: String
  UserName: String
  UserMobileNumber: String
  UserEmail: String
  Attachments: String
  Notes: String
  InstrumentRefNo: String
  DateOfReceipt: DateTime
  SourceDetails: String
  parent_id: BigInt
  org_unit_id: BigInt
  owner_id: BigInt
  audit_data: String
  updated_at: BigInt
  _join: Query!
}

type tenant1_A1_CustomerPaymentsMaxAggregateOutputType {
  record_id: BigInt
  CustomerName: String
  CustomerID: String
  ReceivablesCriteria: String
  ReceivablesCOA: String
  ReceivablesCOAID: String
  AmountReceived: Float
  PaymentDate: DateTime
  PaymentNumber: String
  PaymentMode: String
  DepostiAccountcriteria: String
  DepositTo: String
  DepositToCOAID: String
  Reference: String
  TaxDeducted: String
  TdsTaxAccount: String
  TdsTaxAccountCOAID: String
  TransactionReferenceNumber: String
  AmountUsedForPayments: Float
  WithHoldingTaxPaid: Float
  BalanceDue: Float
  AmountInExcess: Float
  DoYouWantToRefundExcessAmountReceived: String
  AmountRefunded: Float
  NotifyCustomer: String
  NotificationMode: String
  NotificationMessage: String
  UserName: String
  UserMobileNumber: String
  UserEmail: String
  Attachments: String
  Notes: String
  InstrumentRefNo: String
  DateOfReceipt: DateTime
  SourceDetails: String
  parent_id: BigInt
  org_unit_id: BigInt
  owner_id: BigInt
  audit_data: String
  updated_at: BigInt
  _join: Query!
}

type tenant1_AggregateA1_CustomerPayments {
  _count: tenant1_A1_CustomerPaymentsCountAggregateOutputType
  _avg: tenant1_A1_CustomerPaymentsAvgAggregateOutputType
  _sum: tenant1_A1_CustomerPaymentsSumAggregateOutputType
  _min: tenant1_A1_CustomerPaymentsMinAggregateOutputType
  _max: tenant1_A1_CustomerPaymentsMaxAggregateOutputType
  _join: Query!
}

input tenant1_A1_CustomerPaymentsCountOrderByAggregateInput {
  record_id: tenant1_SortOrder
  CustomerName: tenant1_SortOrder
  CustomerID: tenant1_SortOrder
  ReceivablesCriteria: tenant1_SortOrder
  ReceivablesCOA: tenant1_SortOrder
  ReceivablesCOAID: tenant1_SortOrder
  AmountReceived: tenant1_SortOrder
  PaymentDate: tenant1_SortOrder
  PaymentNumber: tenant1_SortOrder
  PaymentMode: tenant1_SortOrder
  DepostiAccountcriteria: tenant1_SortOrder
  DepositTo: tenant1_SortOrder
  DepositToCOAID: tenant1_SortOrder
  Reference: tenant1_SortOrder
  TaxDeducted: tenant1_SortOrder
  TdsTaxAccount: tenant1_SortOrder
  TdsTaxAccountCOAID: tenant1_SortOrder
  TransactionReferenceNumber: tenant1_SortOrder
  AmountUsedForPayments: tenant1_SortOrder
  WithHoldingTaxPaid: tenant1_SortOrder
  BalanceDue: tenant1_SortOrder
  AmountInExcess: tenant1_SortOrder
  DoYouWantToRefundExcessAmountReceived: tenant1_SortOrder
  AmountRefunded: tenant1_SortOrder
  NotifyCustomer: tenant1_SortOrder
  NotificationMode: tenant1_SortOrder
  NotificationMessage: tenant1_SortOrder
  UserName: tenant1_SortOrder
  UserMobileNumber: tenant1_SortOrder
  UserEmail: tenant1_SortOrder
  Attachments: tenant1_SortOrder
  Notes: tenant1_SortOrder
  InstrumentRefNo: tenant1_SortOrder
  DateOfReceipt: tenant1_SortOrder
  SourceDetails: tenant1_SortOrder
  parent_id: tenant1_SortOrder
  org_unit_id: tenant1_SortOrder
  owner_id: tenant1_SortOrder
  audit_data: tenant1_SortOrder
  updated_at: tenant1_SortOrder
}

input tenant1_A1_CustomerPaymentsAvgOrderByAggregateInput {
  record_id: tenant1_SortOrder
  AmountReceived: tenant1_SortOrder
  AmountUsedForPayments: tenant1_SortOrder
  WithHoldingTaxPaid: tenant1_SortOrder
  BalanceDue: tenant1_SortOrder
  AmountInExcess: tenant1_SortOrder
  AmountRefunded: tenant1_SortOrder
  parent_id: tenant1_SortOrder
  org_unit_id: tenant1_SortOrder
  owner_id: tenant1_SortOrder
  updated_at: tenant1_SortOrder
}

input tenant1_A1_CustomerPaymentsMaxOrderByAggregateInput {
  record_id: tenant1_SortOrder
  CustomerName: tenant1_SortOrder
  CustomerID: tenant1_SortOrder
  ReceivablesCriteria: tenant1_SortOrder
  ReceivablesCOA: tenant1_SortOrder
  ReceivablesCOAID: tenant1_SortOrder
  AmountReceived: tenant1_SortOrder
  PaymentDate: tenant1_SortOrder
  PaymentNumber: tenant1_SortOrder
  PaymentMode: tenant1_SortOrder
  DepostiAccountcriteria: tenant1_SortOrder
  DepositTo: tenant1_SortOrder
  DepositToCOAID: tenant1_SortOrder
  Reference: tenant1_SortOrder
  TaxDeducted: tenant1_SortOrder
  TdsTaxAccount: tenant1_SortOrder
  TdsTaxAccountCOAID: tenant1_SortOrder
  TransactionReferenceNumber: tenant1_SortOrder
  AmountUsedForPayments: tenant1_SortOrder
  WithHoldingTaxPaid: tenant1_SortOrder
  BalanceDue: tenant1_SortOrder
  AmountInExcess: tenant1_SortOrder
  DoYouWantToRefundExcessAmountReceived: tenant1_SortOrder
  AmountRefunded: tenant1_SortOrder
  NotifyCustomer: tenant1_SortOrder
  NotificationMode: tenant1_SortOrder
  NotificationMessage: tenant1_SortOrder
  UserName: tenant1_SortOrder
  UserMobileNumber: tenant1_SortOrder
  UserEmail: tenant1_SortOrder
  Attachments: tenant1_SortOrder
  Notes: tenant1_SortOrder
  InstrumentRefNo: tenant1_SortOrder
  DateOfReceipt: tenant1_SortOrder
  SourceDetails: tenant1_SortOrder
  parent_id: tenant1_SortOrder
  org_unit_id: tenant1_SortOrder
  owner_id: tenant1_SortOrder
  audit_data: tenant1_SortOrder
  updated_at: tenant1_SortOrder
}

input tenant1_A1_CustomerPaymentsMinOrderByAggregateInput {
  record_id: tenant1_SortOrder
  CustomerName: tenant1_SortOrder
  CustomerID: tenant1_SortOrder
  ReceivablesCriteria: tenant1_SortOrder
  ReceivablesCOA: tenant1_SortOrder
  ReceivablesCOAID: tenant1_SortOrder
  AmountReceived: tenant1_SortOrder
  PaymentDate: tenant1_SortOrder
  PaymentNumber: tenant1_SortOrder
  PaymentMode: tenant1_SortOrder
  DepostiAccountcriteria: tenant1_SortOrder
  DepositTo: tenant1_SortOrder
  DepositToCOAID: tenant1_SortOrder
  Reference: tenant1_SortOrder
  TaxDeducted: tenant1_SortOrder
  TdsTaxAccount: tenant1_SortOrder
  TdsTaxAccountCOAID: tenant1_SortOrder
  TransactionReferenceNumber: tenant1_SortOrder
  AmountUsedForPayments: tenant1_SortOrder
  WithHoldingTaxPaid: tenant1_SortOrder
  BalanceDue: tenant1_SortOrder
  AmountInExcess: tenant1_SortOrder
  DoYouWantToRefundExcessAmountReceived: tenant1_SortOrder
  AmountRefunded: tenant1_SortOrder
  NotifyCustomer: tenant1_SortOrder
  NotificationMode: tenant1_SortOrder
  NotificationMessage: tenant1_SortOrder
  UserName: tenant1_SortOrder
  UserMobileNumber: tenant1_SortOrder
  UserEmail: tenant1_SortOrder
  Attachments: tenant1_SortOrder
  Notes: tenant1_SortOrder
  InstrumentRefNo: tenant1_SortOrder
  DateOfReceipt: tenant1_SortOrder
  SourceDetails: tenant1_SortOrder
  parent_id: tenant1_SortOrder
  org_unit_id: tenant1_SortOrder
  owner_id: tenant1_SortOrder
  audit_data: tenant1_SortOrder
  updated_at: tenant1_SortOrder
}

input tenant1_A1_CustomerPaymentsSumOrderByAggregateInput {
  record_id: tenant1_SortOrder
  AmountReceived: tenant1_SortOrder
  AmountUsedForPayments: tenant1_SortOrder
  WithHoldingTaxPaid: tenant1_SortOrder
  BalanceDue: tenant1_SortOrder
  AmountInExcess: tenant1_SortOrder
  AmountRefunded: tenant1_SortOrder
  parent_id: tenant1_SortOrder
  org_unit_id: tenant1_SortOrder
  owner_id: tenant1_SortOrder
  updated_at: tenant1_SortOrder
}

input tenant1_A1_CustomerPaymentsOrderByWithAggregationInput {
  record_id: tenant1_SortOrder
  CustomerName: tenant1_SortOrder
  CustomerID: tenant1_SortOrder
  ReceivablesCriteria: tenant1_SortOrder
  ReceivablesCOA: tenant1_SortOrder
  ReceivablesCOAID: tenant1_SortOrder
  AmountReceived: tenant1_SortOrder
  PaymentDate: tenant1_SortOrder
  PaymentNumber: tenant1_SortOrder
  PaymentMode: tenant1_SortOrder
  DepostiAccountcriteria: tenant1_SortOrder
  DepositTo: tenant1_SortOrder
  DepositToCOAID: tenant1_SortOrder
  Reference: tenant1_SortOrder
  TaxDeducted: tenant1_SortOrder
  TdsTaxAccount: tenant1_SortOrder
  TdsTaxAccountCOAID: tenant1_SortOrder
  TransactionReferenceNumber: tenant1_SortOrder
  AmountUsedForPayments: tenant1_SortOrder
  WithHoldingTaxPaid: tenant1_SortOrder
  BalanceDue: tenant1_SortOrder
  AmountInExcess: tenant1_SortOrder
  DoYouWantToRefundExcessAmountReceived: tenant1_SortOrder
  AmountRefunded: tenant1_SortOrder
  NotifyCustomer: tenant1_SortOrder
  NotificationMode: tenant1_SortOrder
  NotificationMessage: tenant1_SortOrder
  UserName: tenant1_SortOrder
  UserMobileNumber: tenant1_SortOrder
  UserEmail: tenant1_SortOrder
  Attachments: tenant1_SortOrder
  Notes: tenant1_SortOrder
  InstrumentRefNo: tenant1_SortOrder
  DateOfReceipt: tenant1_SortOrder
  SourceDetails: tenant1_SortOrder
  parent_id: tenant1_SortOrder
  org_unit_id: tenant1_SortOrder
  owner_id: tenant1_SortOrder
  audit_data: tenant1_SortOrder
  updated_at: tenant1_SortOrder
  _count: tenant1_A1_CustomerPaymentsCountOrderByAggregateInput
  _avg: tenant1_A1_CustomerPaymentsAvgOrderByAggregateInput
  _max: tenant1_A1_CustomerPaymentsMaxOrderByAggregateInput
  _min: tenant1_A1_CustomerPaymentsMinOrderByAggregateInput
  _sum: tenant1_A1_CustomerPaymentsSumOrderByAggregateInput
}

input tenant1_NestedIntFilter {
  equals: Int
  in: [Int]
  notIn: [Int]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: tenant1_NestedIntFilter
}

input tenant1_NestedFloatFilter {
  equals: Float
  in: [Float]
  notIn: [Float]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: tenant1_NestedFloatFilter
}

input tenant1_NestedBigIntWithAggregatesFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: tenant1_NestedBigIntWithAggregatesFilter
  _count: tenant1_NestedIntFilter
  _avg: tenant1_NestedFloatFilter
  _sum: tenant1_NestedBigIntFilter
  _min: tenant1_NestedBigIntFilter
  _max: tenant1_NestedBigIntFilter
}

input tenant1_BigIntWithAggregatesFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: tenant1_NestedBigIntWithAggregatesFilter
  _count: tenant1_NestedIntFilter
  _avg: tenant1_NestedFloatFilter
  _sum: tenant1_NestedBigIntFilter
  _min: tenant1_NestedBigIntFilter
  _max: tenant1_NestedBigIntFilter
}

input tenant1_NestedIntNullableFilter {
  equals: Int
  in: [Int]
  notIn: [Int]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: tenant1_NestedIntNullableFilter
}

input tenant1_NestedStringNullableWithAggregatesFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: tenant1_NestedStringNullableWithAggregatesFilter
  _count: tenant1_NestedIntNullableFilter
  _min: tenant1_NestedStringNullableFilter
  _max: tenant1_NestedStringNullableFilter
}

input tenant1_StringNullableWithAggregatesFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: tenant1_QueryMode
  not: tenant1_NestedStringNullableWithAggregatesFilter
  _count: tenant1_NestedIntNullableFilter
  _min: tenant1_NestedStringNullableFilter
  _max: tenant1_NestedStringNullableFilter
}

input tenant1_NestedDecimalNullableWithAggregatesFilter {
  equals: Float
  in: [Float]
  notIn: [Float]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: tenant1_NestedDecimalNullableWithAggregatesFilter
  _count: tenant1_NestedIntNullableFilter
  _avg: tenant1_NestedDecimalNullableFilter
  _sum: tenant1_NestedDecimalNullableFilter
  _min: tenant1_NestedDecimalNullableFilter
  _max: tenant1_NestedDecimalNullableFilter
}

input tenant1_DecimalNullableWithAggregatesFilter {
  equals: Float
  in: [Float]
  notIn: [Float]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: tenant1_NestedDecimalNullableWithAggregatesFilter
  _count: tenant1_NestedIntNullableFilter
  _avg: tenant1_NestedDecimalNullableFilter
  _sum: tenant1_NestedDecimalNullableFilter
  _min: tenant1_NestedDecimalNullableFilter
  _max: tenant1_NestedDecimalNullableFilter
}

input tenant1_NestedDateTimeNullableWithAggregatesFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: tenant1_NestedDateTimeNullableWithAggregatesFilter
  _count: tenant1_NestedIntNullableFilter
  _min: tenant1_NestedDateTimeNullableFilter
  _max: tenant1_NestedDateTimeNullableFilter
}

input tenant1_DateTimeNullableWithAggregatesFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: tenant1_NestedDateTimeNullableWithAggregatesFilter
  _count: tenant1_NestedIntNullableFilter
  _min: tenant1_NestedDateTimeNullableFilter
  _max: tenant1_NestedDateTimeNullableFilter
}

input tenant1_NestedFloatNullableFilter {
  equals: Float
  in: [Float]
  notIn: [Float]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: tenant1_NestedFloatNullableFilter
}

input tenant1_NestedBigIntNullableWithAggregatesFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: tenant1_NestedBigIntNullableWithAggregatesFilter
  _count: tenant1_NestedIntNullableFilter
  _avg: tenant1_NestedFloatNullableFilter
  _sum: tenant1_NestedBigIntNullableFilter
  _min: tenant1_NestedBigIntNullableFilter
  _max: tenant1_NestedBigIntNullableFilter
}

input tenant1_BigIntNullableWithAggregatesFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: tenant1_NestedBigIntNullableWithAggregatesFilter
  _count: tenant1_NestedIntNullableFilter
  _avg: tenant1_NestedFloatNullableFilter
  _sum: tenant1_NestedBigIntNullableFilter
  _min: tenant1_NestedBigIntNullableFilter
  _max: tenant1_NestedBigIntNullableFilter
}

input tenant1_A1_CustomerPaymentsScalarWhereWithAggregatesInput {
  AND: tenant1_A1_CustomerPaymentsScalarWhereWithAggregatesInput
  OR: [tenant1_A1_CustomerPaymentsScalarWhereWithAggregatesInput]
  NOT: tenant1_A1_CustomerPaymentsScalarWhereWithAggregatesInput
  record_id: tenant1_BigIntWithAggregatesFilter
  CustomerName: tenant1_StringNullableWithAggregatesFilter
  CustomerID: tenant1_StringNullableWithAggregatesFilter
  ReceivablesCriteria: tenant1_StringNullableWithAggregatesFilter
  ReceivablesCOA: tenant1_StringNullableWithAggregatesFilter
  ReceivablesCOAID: tenant1_StringNullableWithAggregatesFilter
  AmountReceived: tenant1_DecimalNullableWithAggregatesFilter
  PaymentDate: tenant1_DateTimeNullableWithAggregatesFilter
  PaymentNumber: tenant1_StringNullableWithAggregatesFilter
  PaymentMode: tenant1_StringNullableWithAggregatesFilter
  DepostiAccountcriteria: tenant1_StringNullableWithAggregatesFilter
  DepositTo: tenant1_StringNullableWithAggregatesFilter
  DepositToCOAID: tenant1_StringNullableWithAggregatesFilter
  Reference: tenant1_StringNullableWithAggregatesFilter
  TaxDeducted: tenant1_StringNullableWithAggregatesFilter
  TdsTaxAccount: tenant1_StringNullableWithAggregatesFilter
  TdsTaxAccountCOAID: tenant1_StringNullableWithAggregatesFilter
  TransactionReferenceNumber: tenant1_StringNullableWithAggregatesFilter
  AmountUsedForPayments: tenant1_DecimalNullableWithAggregatesFilter
  WithHoldingTaxPaid: tenant1_DecimalNullableWithAggregatesFilter
  BalanceDue: tenant1_DecimalNullableWithAggregatesFilter
  AmountInExcess: tenant1_DecimalNullableWithAggregatesFilter
  DoYouWantToRefundExcessAmountReceived: tenant1_StringNullableWithAggregatesFilter
  AmountRefunded: tenant1_DecimalNullableWithAggregatesFilter
  NotifyCustomer: tenant1_StringNullableWithAggregatesFilter
  NotificationMode: tenant1_StringNullableWithAggregatesFilter
  NotificationMessage: tenant1_StringNullableWithAggregatesFilter
  UserName: tenant1_StringNullableWithAggregatesFilter
  UserMobileNumber: tenant1_StringNullableWithAggregatesFilter
  UserEmail: tenant1_StringNullableWithAggregatesFilter
  Attachments: tenant1_StringNullableWithAggregatesFilter
  Notes: tenant1_StringNullableWithAggregatesFilter
  InstrumentRefNo: tenant1_StringNullableWithAggregatesFilter
  DateOfReceipt: tenant1_DateTimeNullableWithAggregatesFilter
  SourceDetails: tenant1_StringNullableWithAggregatesFilter
  parent_id: tenant1_BigIntNullableWithAggregatesFilter
  org_unit_id: tenant1_BigIntNullableWithAggregatesFilter
  owner_id: tenant1_BigIntNullableWithAggregatesFilter
  audit_data: tenant1_StringNullableWithAggregatesFilter
  updated_at: tenant1_BigIntNullableWithAggregatesFilter
}

type tenant1_A1_CustomerPaymentsGroupByOutputType {
  record_id: BigInt!
  CustomerName: String
  CustomerID: String
  ReceivablesCriteria: String
  ReceivablesCOA: String
  ReceivablesCOAID: String
  AmountReceived: Float
  PaymentDate: DateTime
  PaymentNumber: String
  PaymentMode: String
  DepostiAccountcriteria: String
  DepositTo: String
  DepositToCOAID: String
  Reference: String
  TaxDeducted: String
  TdsTaxAccount: String
  TdsTaxAccountCOAID: String
  TransactionReferenceNumber: String
  AmountUsedForPayments: Float
  WithHoldingTaxPaid: Float
  BalanceDue: Float
  AmountInExcess: Float
  DoYouWantToRefundExcessAmountReceived: String
  AmountRefunded: Float
  NotifyCustomer: String
  NotificationMode: String
  NotificationMessage: String
  UserName: String
  UserMobileNumber: String
  UserEmail: String
  Attachments: String
  Notes: String
  InstrumentRefNo: String
  DateOfReceipt: DateTime
  SourceDetails: String
  parent_id: BigInt
  org_unit_id: BigInt
  owner_id: BigInt
  audit_data: String
  updated_at: BigInt
  _count: tenant1_A1_CustomerPaymentsCountAggregateOutputType
  _avg: tenant1_A1_CustomerPaymentsAvgAggregateOutputType
  _sum: tenant1_A1_CustomerPaymentsSumAggregateOutputType
  _min: tenant1_A1_CustomerPaymentsMinAggregateOutputType
  _max: tenant1_A1_CustomerPaymentsMaxAggregateOutputType
  _join: Query!
}

type Query {
  tenant1_findFirstA1_CustomerPayments(where: tenant1_A1_CustomerPaymentsWhereInput, orderBy: [tenant1_A1_CustomerPaymentsOrderByWithRelationInput], cursor: tenant1_A1_CustomerPaymentsWhereUniqueInput, take: Int, skip: Int, distinct: [tenant1_A1_CustomerPaymentsScalarFieldEnum]): tenant1_A1_CustomerPayments
  tenant1_findManyA1_CustomerPayments(where: tenant1_A1_CustomerPaymentsWhereInput, orderBy: [tenant1_A1_CustomerPaymentsOrderByWithRelationInput], cursor: tenant1_A1_CustomerPaymentsWhereUniqueInput, take: Int, skip: Int, distinct: [tenant1_A1_CustomerPaymentsScalarFieldEnum]): [tenant1_A1_CustomerPayments]!
  tenant1_aggregateA1_CustomerPayments(where: tenant1_A1_CustomerPaymentsWhereInput, orderBy: [tenant1_A1_CustomerPaymentsOrderByWithRelationInput], cursor: tenant1_A1_CustomerPaymentsWhereUniqueInput, take: Int, skip: Int): tenant1_AggregateA1_CustomerPayments!
  tenant1_groupByA1_CustomerPayments(where: tenant1_A1_CustomerPaymentsWhereInput, orderBy: [tenant1_A1_CustomerPaymentsOrderByWithAggregationInput], by: [tenant1_A1_CustomerPaymentsScalarFieldEnum]!, having: tenant1_A1_CustomerPaymentsScalarWhereWithAggregatesInput, take: Int, skip: Int): [tenant1_A1_CustomerPaymentsGroupByOutputType]!
  tenant1_findUniqueA1_CustomerPayments(where: tenant1_A1_CustomerPaymentsWhereUniqueInput!): tenant1_A1_CustomerPayments
  tenant1_queryRaw(query: String!, parameters: [String]): [_Row!]!
  tenant1_queryRawJSON(query: String!, parameters: [String]): JSON
  tenant2_findFirstA1_DummyEntity4(where: tenant2_A1_DummyEntity4WhereInput, orderBy: [tenant2_A1_DummyEntity4OrderByWithRelationInput], cursor: tenant2_A1_DummyEntity4WhereUniqueInput, take: Int, skip: Int, distinct: [tenant2_A1_DummyEntity4ScalarFieldEnum]): tenant2_A1_DummyEntity4
  tenant2_findManyA1_DummyEntity4(where: tenant2_A1_DummyEntity4WhereInput, orderBy: [tenant2_A1_DummyEntity4OrderByWithRelationInput], cursor: tenant2_A1_DummyEntity4WhereUniqueInput, take: Int, skip: Int, distinct: [tenant2_A1_DummyEntity4ScalarFieldEnum]): [tenant2_A1_DummyEntity4]!
  tenant2_aggregateA1_DummyEntity4(where: tenant2_A1_DummyEntity4WhereInput, orderBy: [tenant2_A1_DummyEntity4OrderByWithRelationInput], cursor: tenant2_A1_DummyEntity4WhereUniqueInput, take: Int, skip: Int): tenant2_AggregateA1_DummyEntity4!
  tenant2_groupByA1_DummyEntity4(where: tenant2_A1_DummyEntity4WhereInput, orderBy: [tenant2_A1_DummyEntity4OrderByWithAggregationInput], by: [tenant2_A1_DummyEntity4ScalarFieldEnum]!, having: tenant2_A1_DummyEntity4ScalarWhereWithAggregatesInput, take: Int, skip: Int): [tenant2_A1_DummyEntity4GroupByOutputType]!
  tenant2_findUniqueA1_DummyEntity4(where: tenant2_A1_DummyEntity4WhereUniqueInput!): tenant2_A1_DummyEntity4
  tenant2_queryRaw(query: String!, parameters: [String]): [_Row!]!
  tenant2_queryRawJSON(query: String!, parameters: [String]): JSON
  tenant3_findFirstA1_DummyEntity4(where: tenant3_A1_DummyEntity4WhereInput, orderBy: [tenant3_A1_DummyEntity4OrderByWithRelationInput], cursor: tenant3_A1_DummyEntity4WhereUniqueInput, take: Int, skip: Int, distinct: [tenant3_A1_DummyEntity4ScalarFieldEnum]): tenant3_A1_DummyEntity4
  tenant3_findManyA1_DummyEntity4(where: tenant3_A1_DummyEntity4WhereInput, orderBy: [tenant3_A1_DummyEntity4OrderByWithRelationInput], cursor: tenant3_A1_DummyEntity4WhereUniqueInput, take: Int, skip: Int, distinct: [tenant3_A1_DummyEntity4ScalarFieldEnum]): [tenant3_A1_DummyEntity4]!
  tenant3_aggregateA1_DummyEntity4(where: tenant3_A1_DummyEntity4WhereInput, orderBy: [tenant3_A1_DummyEntity4OrderByWithRelationInput], cursor: tenant3_A1_DummyEntity4WhereUniqueInput, take: Int, skip: Int): tenant3_AggregateA1_DummyEntity4!
  tenant3_groupByA1_DummyEntity4(where: tenant3_A1_DummyEntity4WhereInput, orderBy: [tenant3_A1_DummyEntity4OrderByWithAggregationInput], by: [tenant3_A1_DummyEntity4ScalarFieldEnum]!, having: tenant3_A1_DummyEntity4ScalarWhereWithAggregatesInput, take: Int, skip: Int): [tenant3_A1_DummyEntity4GroupByOutputType]!
  tenant3_findUniqueA1_DummyEntity4(where: tenant3_A1_DummyEntity4WhereUniqueInput!): tenant3_A1_DummyEntity4
  tenant3_queryRaw(query: String!, parameters: [String]): [_Row!]!
  tenant3_queryRawJSON(query: String!, parameters: [String]): JSON
}

input tenant1_A1_CustomerPaymentsCreateInput {
  record_id: BigInt!
  CustomerName: String
  CustomerID: String
  ReceivablesCriteria: String
  ReceivablesCOA: String
  ReceivablesCOAID: String
  AmountReceived: Float
  PaymentDate: DateTime
  PaymentNumber: String
  PaymentMode: String
  DepostiAccountcriteria: String
  DepositTo: String
  DepositToCOAID: String
  Reference: String
  TaxDeducted: String
  TdsTaxAccount: String
  TdsTaxAccountCOAID: String
  TransactionReferenceNumber: String
  AmountUsedForPayments: Float
  WithHoldingTaxPaid: Float
  BalanceDue: Float
  AmountInExcess: Float
  DoYouWantToRefundExcessAmountReceived: String
  AmountRefunded: Float
  NotifyCustomer: String
  NotificationMode: String
  NotificationMessage: String
  UserName: String
  UserMobileNumber: String
  UserEmail: String
  Attachments: String
  Notes: String
  InstrumentRefNo: String
  DateOfReceipt: DateTime
  SourceDetails: String
  parent_id: BigInt
  org_unit_id: BigInt
  owner_id: BigInt
  audit_data: String
  updated_at: BigInt
}

input tenant1_BigIntFieldUpdateOperationsInput {
  set: BigInt
  increment: BigInt
  decrement: BigInt
  multiply: BigInt
  divide: BigInt
}

input tenant1_NullableStringFieldUpdateOperationsInput {
  set: String
}

input tenant1_NullableDecimalFieldUpdateOperationsInput {
  set: Float
  increment: Float
  decrement: Float
  multiply: Float
  divide: Float
}

input tenant1_NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input tenant1_NullableBigIntFieldUpdateOperationsInput {
  set: BigInt
  increment: BigInt
  decrement: BigInt
  multiply: BigInt
  divide: BigInt
}

input tenant1_A1_CustomerPaymentsUpdateInput {
  record_id: tenant1_BigIntFieldUpdateOperationsInput
  CustomerName: tenant1_NullableStringFieldUpdateOperationsInput
  CustomerID: tenant1_NullableStringFieldUpdateOperationsInput
  ReceivablesCriteria: tenant1_NullableStringFieldUpdateOperationsInput
  ReceivablesCOA: tenant1_NullableStringFieldUpdateOperationsInput
  ReceivablesCOAID: tenant1_NullableStringFieldUpdateOperationsInput
  AmountReceived: tenant1_NullableDecimalFieldUpdateOperationsInput
  PaymentDate: tenant1_NullableDateTimeFieldUpdateOperationsInput
  PaymentNumber: tenant1_NullableStringFieldUpdateOperationsInput
  PaymentMode: tenant1_NullableStringFieldUpdateOperationsInput
  DepostiAccountcriteria: tenant1_NullableStringFieldUpdateOperationsInput
  DepositTo: tenant1_NullableStringFieldUpdateOperationsInput
  DepositToCOAID: tenant1_NullableStringFieldUpdateOperationsInput
  Reference: tenant1_NullableStringFieldUpdateOperationsInput
  TaxDeducted: tenant1_NullableStringFieldUpdateOperationsInput
  TdsTaxAccount: tenant1_NullableStringFieldUpdateOperationsInput
  TdsTaxAccountCOAID: tenant1_NullableStringFieldUpdateOperationsInput
  TransactionReferenceNumber: tenant1_NullableStringFieldUpdateOperationsInput
  AmountUsedForPayments: tenant1_NullableDecimalFieldUpdateOperationsInput
  WithHoldingTaxPaid: tenant1_NullableDecimalFieldUpdateOperationsInput
  BalanceDue: tenant1_NullableDecimalFieldUpdateOperationsInput
  AmountInExcess: tenant1_NullableDecimalFieldUpdateOperationsInput
  DoYouWantToRefundExcessAmountReceived: tenant1_NullableStringFieldUpdateOperationsInput
  AmountRefunded: tenant1_NullableDecimalFieldUpdateOperationsInput
  NotifyCustomer: tenant1_NullableStringFieldUpdateOperationsInput
  NotificationMode: tenant1_NullableStringFieldUpdateOperationsInput
  NotificationMessage: tenant1_NullableStringFieldUpdateOperationsInput
  UserName: tenant1_NullableStringFieldUpdateOperationsInput
  UserMobileNumber: tenant1_NullableStringFieldUpdateOperationsInput
  UserEmail: tenant1_NullableStringFieldUpdateOperationsInput
  Attachments: tenant1_NullableStringFieldUpdateOperationsInput
  Notes: tenant1_NullableStringFieldUpdateOperationsInput
  InstrumentRefNo: tenant1_NullableStringFieldUpdateOperationsInput
  DateOfReceipt: tenant1_NullableDateTimeFieldUpdateOperationsInput
  SourceDetails: tenant1_NullableStringFieldUpdateOperationsInput
  parent_id: tenant1_NullableBigIntFieldUpdateOperationsInput
  org_unit_id: tenant1_NullableBigIntFieldUpdateOperationsInput
  owner_id: tenant1_NullableBigIntFieldUpdateOperationsInput
  audit_data: tenant1_NullableStringFieldUpdateOperationsInput
  updated_at: tenant1_NullableBigIntFieldUpdateOperationsInput
}

input tenant1_A1_CustomerPaymentsCreateManyInput {
  record_id: BigInt!
  CustomerName: String
  CustomerID: String
  ReceivablesCriteria: String
  ReceivablesCOA: String
  ReceivablesCOAID: String
  AmountReceived: Float
  PaymentDate: DateTime
  PaymentNumber: String
  PaymentMode: String
  DepostiAccountcriteria: String
  DepositTo: String
  DepositToCOAID: String
  Reference: String
  TaxDeducted: String
  TdsTaxAccount: String
  TdsTaxAccountCOAID: String
  TransactionReferenceNumber: String
  AmountUsedForPayments: Float
  WithHoldingTaxPaid: Float
  BalanceDue: Float
  AmountInExcess: Float
  DoYouWantToRefundExcessAmountReceived: String
  AmountRefunded: Float
  NotifyCustomer: String
  NotificationMode: String
  NotificationMessage: String
  UserName: String
  UserMobileNumber: String
  UserEmail: String
  Attachments: String
  Notes: String
  InstrumentRefNo: String
  DateOfReceipt: DateTime
  SourceDetails: String
  parent_id: BigInt
  org_unit_id: BigInt
  owner_id: BigInt
  audit_data: String
  updated_at: BigInt
}

type tenant1_AffectedRowsOutput {
  count: Int!
  _join: Query!
}

input tenant1_A1_CustomerPaymentsUpdateManyMutationInput {
  record_id: tenant1_BigIntFieldUpdateOperationsInput
  CustomerName: tenant1_NullableStringFieldUpdateOperationsInput
  CustomerID: tenant1_NullableStringFieldUpdateOperationsInput
  ReceivablesCriteria: tenant1_NullableStringFieldUpdateOperationsInput
  ReceivablesCOA: tenant1_NullableStringFieldUpdateOperationsInput
  ReceivablesCOAID: tenant1_NullableStringFieldUpdateOperationsInput
  AmountReceived: tenant1_NullableDecimalFieldUpdateOperationsInput
  PaymentDate: tenant1_NullableDateTimeFieldUpdateOperationsInput
  PaymentNumber: tenant1_NullableStringFieldUpdateOperationsInput
  PaymentMode: tenant1_NullableStringFieldUpdateOperationsInput
  DepostiAccountcriteria: tenant1_NullableStringFieldUpdateOperationsInput
  DepositTo: tenant1_NullableStringFieldUpdateOperationsInput
  DepositToCOAID: tenant1_NullableStringFieldUpdateOperationsInput
  Reference: tenant1_NullableStringFieldUpdateOperationsInput
  TaxDeducted: tenant1_NullableStringFieldUpdateOperationsInput
  TdsTaxAccount: tenant1_NullableStringFieldUpdateOperationsInput
  TdsTaxAccountCOAID: tenant1_NullableStringFieldUpdateOperationsInput
  TransactionReferenceNumber: tenant1_NullableStringFieldUpdateOperationsInput
  AmountUsedForPayments: tenant1_NullableDecimalFieldUpdateOperationsInput
  WithHoldingTaxPaid: tenant1_NullableDecimalFieldUpdateOperationsInput
  BalanceDue: tenant1_NullableDecimalFieldUpdateOperationsInput
  AmountInExcess: tenant1_NullableDecimalFieldUpdateOperationsInput
  DoYouWantToRefundExcessAmountReceived: tenant1_NullableStringFieldUpdateOperationsInput
  AmountRefunded: tenant1_NullableDecimalFieldUpdateOperationsInput
  NotifyCustomer: tenant1_NullableStringFieldUpdateOperationsInput
  NotificationMode: tenant1_NullableStringFieldUpdateOperationsInput
  NotificationMessage: tenant1_NullableStringFieldUpdateOperationsInput
  UserName: tenant1_NullableStringFieldUpdateOperationsInput
  UserMobileNumber: tenant1_NullableStringFieldUpdateOperationsInput
  UserEmail: tenant1_NullableStringFieldUpdateOperationsInput
  Attachments: tenant1_NullableStringFieldUpdateOperationsInput
  Notes: tenant1_NullableStringFieldUpdateOperationsInput
  InstrumentRefNo: tenant1_NullableStringFieldUpdateOperationsInput
  DateOfReceipt: tenant1_NullableDateTimeFieldUpdateOperationsInput
  SourceDetails: tenant1_NullableStringFieldUpdateOperationsInput
  parent_id: tenant1_NullableBigIntFieldUpdateOperationsInput
  org_unit_id: tenant1_NullableBigIntFieldUpdateOperationsInput
  owner_id: tenant1_NullableBigIntFieldUpdateOperationsInput
  audit_data: tenant1_NullableStringFieldUpdateOperationsInput
  updated_at: tenant1_NullableBigIntFieldUpdateOperationsInput
}

type Mutation {
  tenant1_createOneA1_CustomerPayments(data: tenant1_A1_CustomerPaymentsCreateInput!): tenant1_A1_CustomerPayments
  tenant1_upsertOneA1_CustomerPayments(where: tenant1_A1_CustomerPaymentsWhereUniqueInput!, create: tenant1_A1_CustomerPaymentsCreateInput!, update: tenant1_A1_CustomerPaymentsUpdateInput!): tenant1_A1_CustomerPayments
  tenant1_createManyA1_CustomerPayments(data: [tenant1_A1_CustomerPaymentsCreateManyInput]!, skipDuplicates: Boolean): tenant1_AffectedRowsOutput
  tenant1_deleteOneA1_CustomerPayments(where: tenant1_A1_CustomerPaymentsWhereUniqueInput!): tenant1_A1_CustomerPayments
  tenant1_updateOneA1_CustomerPayments(data: tenant1_A1_CustomerPaymentsUpdateInput!, where: tenant1_A1_CustomerPaymentsWhereUniqueInput!): tenant1_A1_CustomerPayments
  tenant1_updateManyA1_CustomerPayments(data: tenant1_A1_CustomerPaymentsUpdateManyMutationInput!, where: tenant1_A1_CustomerPaymentsWhereInput): tenant1_AffectedRowsOutput
  tenant1_deleteManyA1_CustomerPayments(where: tenant1_A1_CustomerPaymentsWhereInput): tenant1_AffectedRowsOutput
  tenant1_executeRaw(query: String!, parameters: [String]): Int!
  tenant2_createOneA1_DummyEntity4(data: tenant2_A1_DummyEntity4CreateInput!): tenant2_A1_DummyEntity4
  tenant2_upsertOneA1_DummyEntity4(where: tenant2_A1_DummyEntity4WhereUniqueInput!, create: tenant2_A1_DummyEntity4CreateInput!, update: tenant2_A1_DummyEntity4UpdateInput!): tenant2_A1_DummyEntity4
  tenant2_createManyA1_DummyEntity4(data: [tenant2_A1_DummyEntity4CreateManyInput]!, skipDuplicates: Boolean): tenant2_AffectedRowsOutput
  tenant2_deleteOneA1_DummyEntity4(where: tenant2_A1_DummyEntity4WhereUniqueInput!): tenant2_A1_DummyEntity4
  tenant2_updateOneA1_DummyEntity4(data: tenant2_A1_DummyEntity4UpdateInput!, where: tenant2_A1_DummyEntity4WhereUniqueInput!): tenant2_A1_DummyEntity4
  tenant2_updateManyA1_DummyEntity4(data: tenant2_A1_DummyEntity4UpdateManyMutationInput!, where: tenant2_A1_DummyEntity4WhereInput): tenant2_AffectedRowsOutput
  tenant2_deleteManyA1_DummyEntity4(where: tenant2_A1_DummyEntity4WhereInput): tenant2_AffectedRowsOutput
  tenant2_executeRaw(query: String!, parameters: [String]): Int!
  tenant3_createOneA1_DummyEntity4(data: tenant3_A1_DummyEntity4CreateInput!): tenant3_A1_DummyEntity4
  tenant3_upsertOneA1_DummyEntity4(where: tenant3_A1_DummyEntity4WhereUniqueInput!, create: tenant3_A1_DummyEntity4CreateInput!, update: tenant3_A1_DummyEntity4UpdateInput!): tenant3_A1_DummyEntity4
  tenant3_createManyA1_DummyEntity4(data: [tenant3_A1_DummyEntity4CreateManyInput]!, skipDuplicates: Boolean): tenant3_AffectedRowsOutput
  tenant3_deleteOneA1_DummyEntity4(where: tenant3_A1_DummyEntity4WhereUniqueInput!): tenant3_A1_DummyEntity4
  tenant3_updateOneA1_DummyEntity4(data: tenant3_A1_DummyEntity4UpdateInput!, where: tenant3_A1_DummyEntity4WhereUniqueInput!): tenant3_A1_DummyEntity4
  tenant3_updateManyA1_DummyEntity4(data: tenant3_A1_DummyEntity4UpdateManyMutationInput!, where: tenant3_A1_DummyEntity4WhereInput): tenant3_AffectedRowsOutput
  tenant3_deleteManyA1_DummyEntity4(where: tenant3_A1_DummyEntity4WhereInput): tenant3_AffectedRowsOutput
  tenant3_executeRaw(query: String!, parameters: [String]): Int!
}

scalar DateTime

scalar JSON

scalar UUID

scalar BigInt

scalar tenant1_Bytes

type _Row {
  ID: ID!
  Int: Int!
  Float: Float!
  String: String!
  Boolean: Boolean!
  DateTime: DateTime!
  JSON: JSON!
  Object: _Row!
  Array: [_Row!]!
  OptionalID: ID
  OptionalInt: Int
  OptionalFloat: Float
  OptionalString: String
  OptionalBoolean: Boolean
  OptionalDateTime: DateTime
  OptionalJSON: JSON
  OptionalObject: _Row
  OptionalArray: [_Row!]
  _join: Query!
}

input tenant2_NestedBigIntFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: tenant2_NestedBigIntFilter
}

input tenant2_BigIntFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: tenant2_NestedBigIntFilter
}

enum tenant2_QueryMode {
  default
  insensitive
}

input tenant2_NestedStringNullableFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: tenant2_NestedStringNullableFilter
}

input tenant2_StringNullableFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: tenant2_QueryMode
  not: tenant2_NestedStringNullableFilter
}

input tenant2_NestedBigIntNullableFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: tenant2_NestedBigIntNullableFilter
}

input tenant2_BigIntNullableFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: tenant2_NestedBigIntNullableFilter
}

input tenant2_A1_DummyEntity4WhereInput {
  AND: tenant2_A1_DummyEntity4WhereInput
  OR: [tenant2_A1_DummyEntity4WhereInput]
  NOT: tenant2_A1_DummyEntity4WhereInput
  record_id: tenant2_BigIntFilter
  TransactionID: tenant2_StringNullableFilter
  parent_id: tenant2_BigIntNullableFilter
  org_unit_id: tenant2_BigIntNullableFilter
  owner_id: tenant2_BigIntNullableFilter
  audit_data: tenant2_StringNullableFilter
  updated_at: tenant2_BigIntNullableFilter
}

enum tenant2_SortOrder {
  asc
  desc
}

input tenant2_A1_DummyEntity4OrderByWithRelationInput {
  record_id: tenant2_SortOrder
  TransactionID: tenant2_SortOrder
  parent_id: tenant2_SortOrder
  org_unit_id: tenant2_SortOrder
  owner_id: tenant2_SortOrder
  audit_data: tenant2_SortOrder
  updated_at: tenant2_SortOrder
}

input tenant2_A1_DummyEntity4WhereUniqueInput {
  record_id: BigInt
}

enum tenant2_A1_DummyEntity4ScalarFieldEnum {
  record_id
  TransactionID
  parent_id
  org_unit_id
  owner_id
  audit_data
  updated_at
}

type tenant2_A1_DummyEntity4 {
  record_id: BigInt!
  TransactionID: String
  parent_id: BigInt
  org_unit_id: BigInt
  owner_id: BigInt
  audit_data: String
  updated_at: BigInt
  _join: Query!
}

type tenant2_A1_DummyEntity4CountAggregateOutputType {
  record_id: Int!
  TransactionID: Int!
  parent_id: Int!
  org_unit_id: Int!
  owner_id: Int!
  audit_data: Int!
  updated_at: Int!
  _all: Int!
  _join: Query!
}

type tenant2_A1_DummyEntity4AvgAggregateOutputType {
  record_id: Float
  parent_id: Float
  org_unit_id: Float
  owner_id: Float
  updated_at: Float
  _join: Query!
}

type tenant2_A1_DummyEntity4SumAggregateOutputType {
  record_id: BigInt
  parent_id: BigInt
  org_unit_id: BigInt
  owner_id: BigInt
  updated_at: BigInt
  _join: Query!
}

type tenant2_A1_DummyEntity4MinAggregateOutputType {
  record_id: BigInt
  TransactionID: String
  parent_id: BigInt
  org_unit_id: BigInt
  owner_id: BigInt
  audit_data: String
  updated_at: BigInt
  _join: Query!
}

type tenant2_A1_DummyEntity4MaxAggregateOutputType {
  record_id: BigInt
  TransactionID: String
  parent_id: BigInt
  org_unit_id: BigInt
  owner_id: BigInt
  audit_data: String
  updated_at: BigInt
  _join: Query!
}

type tenant2_AggregateA1_DummyEntity4 {
  _count: tenant2_A1_DummyEntity4CountAggregateOutputType
  _avg: tenant2_A1_DummyEntity4AvgAggregateOutputType
  _sum: tenant2_A1_DummyEntity4SumAggregateOutputType
  _min: tenant2_A1_DummyEntity4MinAggregateOutputType
  _max: tenant2_A1_DummyEntity4MaxAggregateOutputType
  _join: Query!
}

input tenant2_A1_DummyEntity4CountOrderByAggregateInput {
  record_id: tenant2_SortOrder
  TransactionID: tenant2_SortOrder
  parent_id: tenant2_SortOrder
  org_unit_id: tenant2_SortOrder
  owner_id: tenant2_SortOrder
  audit_data: tenant2_SortOrder
  updated_at: tenant2_SortOrder
}

input tenant2_A1_DummyEntity4AvgOrderByAggregateInput {
  record_id: tenant2_SortOrder
  parent_id: tenant2_SortOrder
  org_unit_id: tenant2_SortOrder
  owner_id: tenant2_SortOrder
  updated_at: tenant2_SortOrder
}

input tenant2_A1_DummyEntity4MaxOrderByAggregateInput {
  record_id: tenant2_SortOrder
  TransactionID: tenant2_SortOrder
  parent_id: tenant2_SortOrder
  org_unit_id: tenant2_SortOrder
  owner_id: tenant2_SortOrder
  audit_data: tenant2_SortOrder
  updated_at: tenant2_SortOrder
}

input tenant2_A1_DummyEntity4MinOrderByAggregateInput {
  record_id: tenant2_SortOrder
  TransactionID: tenant2_SortOrder
  parent_id: tenant2_SortOrder
  org_unit_id: tenant2_SortOrder
  owner_id: tenant2_SortOrder
  audit_data: tenant2_SortOrder
  updated_at: tenant2_SortOrder
}

input tenant2_A1_DummyEntity4SumOrderByAggregateInput {
  record_id: tenant2_SortOrder
  parent_id: tenant2_SortOrder
  org_unit_id: tenant2_SortOrder
  owner_id: tenant2_SortOrder
  updated_at: tenant2_SortOrder
}

input tenant2_A1_DummyEntity4OrderByWithAggregationInput {
  record_id: tenant2_SortOrder
  TransactionID: tenant2_SortOrder
  parent_id: tenant2_SortOrder
  org_unit_id: tenant2_SortOrder
  owner_id: tenant2_SortOrder
  audit_data: tenant2_SortOrder
  updated_at: tenant2_SortOrder
  _count: tenant2_A1_DummyEntity4CountOrderByAggregateInput
  _avg: tenant2_A1_DummyEntity4AvgOrderByAggregateInput
  _max: tenant2_A1_DummyEntity4MaxOrderByAggregateInput
  _min: tenant2_A1_DummyEntity4MinOrderByAggregateInput
  _sum: tenant2_A1_DummyEntity4SumOrderByAggregateInput
}

input tenant2_NestedIntFilter {
  equals: Int
  in: [Int]
  notIn: [Int]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: tenant2_NestedIntFilter
}

input tenant2_NestedFloatFilter {
  equals: Float
  in: [Float]
  notIn: [Float]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: tenant2_NestedFloatFilter
}

input tenant2_NestedBigIntWithAggregatesFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: tenant2_NestedBigIntWithAggregatesFilter
  _count: tenant2_NestedIntFilter
  _avg: tenant2_NestedFloatFilter
  _sum: tenant2_NestedBigIntFilter
  _min: tenant2_NestedBigIntFilter
  _max: tenant2_NestedBigIntFilter
}

input tenant2_BigIntWithAggregatesFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: tenant2_NestedBigIntWithAggregatesFilter
  _count: tenant2_NestedIntFilter
  _avg: tenant2_NestedFloatFilter
  _sum: tenant2_NestedBigIntFilter
  _min: tenant2_NestedBigIntFilter
  _max: tenant2_NestedBigIntFilter
}

input tenant2_NestedIntNullableFilter {
  equals: Int
  in: [Int]
  notIn: [Int]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: tenant2_NestedIntNullableFilter
}

input tenant2_NestedStringNullableWithAggregatesFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: tenant2_NestedStringNullableWithAggregatesFilter
  _count: tenant2_NestedIntNullableFilter
  _min: tenant2_NestedStringNullableFilter
  _max: tenant2_NestedStringNullableFilter
}

input tenant2_StringNullableWithAggregatesFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: tenant2_QueryMode
  not: tenant2_NestedStringNullableWithAggregatesFilter
  _count: tenant2_NestedIntNullableFilter
  _min: tenant2_NestedStringNullableFilter
  _max: tenant2_NestedStringNullableFilter
}

input tenant2_NestedFloatNullableFilter {
  equals: Float
  in: [Float]
  notIn: [Float]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: tenant2_NestedFloatNullableFilter
}

input tenant2_NestedBigIntNullableWithAggregatesFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: tenant2_NestedBigIntNullableWithAggregatesFilter
  _count: tenant2_NestedIntNullableFilter
  _avg: tenant2_NestedFloatNullableFilter
  _sum: tenant2_NestedBigIntNullableFilter
  _min: tenant2_NestedBigIntNullableFilter
  _max: tenant2_NestedBigIntNullableFilter
}

input tenant2_BigIntNullableWithAggregatesFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: tenant2_NestedBigIntNullableWithAggregatesFilter
  _count: tenant2_NestedIntNullableFilter
  _avg: tenant2_NestedFloatNullableFilter
  _sum: tenant2_NestedBigIntNullableFilter
  _min: tenant2_NestedBigIntNullableFilter
  _max: tenant2_NestedBigIntNullableFilter
}

input tenant2_A1_DummyEntity4ScalarWhereWithAggregatesInput {
  AND: tenant2_A1_DummyEntity4ScalarWhereWithAggregatesInput
  OR: [tenant2_A1_DummyEntity4ScalarWhereWithAggregatesInput]
  NOT: tenant2_A1_DummyEntity4ScalarWhereWithAggregatesInput
  record_id: tenant2_BigIntWithAggregatesFilter
  TransactionID: tenant2_StringNullableWithAggregatesFilter
  parent_id: tenant2_BigIntNullableWithAggregatesFilter
  org_unit_id: tenant2_BigIntNullableWithAggregatesFilter
  owner_id: tenant2_BigIntNullableWithAggregatesFilter
  audit_data: tenant2_StringNullableWithAggregatesFilter
  updated_at: tenant2_BigIntNullableWithAggregatesFilter
}

type tenant2_A1_DummyEntity4GroupByOutputType {
  record_id: BigInt!
  TransactionID: String
  parent_id: BigInt
  org_unit_id: BigInt
  owner_id: BigInt
  audit_data: String
  updated_at: BigInt
  _count: tenant2_A1_DummyEntity4CountAggregateOutputType
  _avg: tenant2_A1_DummyEntity4AvgAggregateOutputType
  _sum: tenant2_A1_DummyEntity4SumAggregateOutputType
  _min: tenant2_A1_DummyEntity4MinAggregateOutputType
  _max: tenant2_A1_DummyEntity4MaxAggregateOutputType
  _join: Query!
}

input tenant2_A1_DummyEntity4CreateInput {
  record_id: BigInt!
  TransactionID: String
  parent_id: BigInt
  org_unit_id: BigInt
  owner_id: BigInt
  audit_data: String
  updated_at: BigInt
}

input tenant2_BigIntFieldUpdateOperationsInput {
  set: BigInt
  increment: BigInt
  decrement: BigInt
  multiply: BigInt
  divide: BigInt
}

input tenant2_NullableStringFieldUpdateOperationsInput {
  set: String
}

input tenant2_NullableBigIntFieldUpdateOperationsInput {
  set: BigInt
  increment: BigInt
  decrement: BigInt
  multiply: BigInt
  divide: BigInt
}

input tenant2_A1_DummyEntity4UpdateInput {
  record_id: tenant2_BigIntFieldUpdateOperationsInput
  TransactionID: tenant2_NullableStringFieldUpdateOperationsInput
  parent_id: tenant2_NullableBigIntFieldUpdateOperationsInput
  org_unit_id: tenant2_NullableBigIntFieldUpdateOperationsInput
  owner_id: tenant2_NullableBigIntFieldUpdateOperationsInput
  audit_data: tenant2_NullableStringFieldUpdateOperationsInput
  updated_at: tenant2_NullableBigIntFieldUpdateOperationsInput
}

input tenant2_A1_DummyEntity4CreateManyInput {
  record_id: BigInt!
  TransactionID: String
  parent_id: BigInt
  org_unit_id: BigInt
  owner_id: BigInt
  audit_data: String
  updated_at: BigInt
}

type tenant2_AffectedRowsOutput {
  count: Int!
  _join: Query!
}

input tenant2_A1_DummyEntity4UpdateManyMutationInput {
  record_id: tenant2_BigIntFieldUpdateOperationsInput
  TransactionID: tenant2_NullableStringFieldUpdateOperationsInput
  parent_id: tenant2_NullableBigIntFieldUpdateOperationsInput
  org_unit_id: tenant2_NullableBigIntFieldUpdateOperationsInput
  owner_id: tenant2_NullableBigIntFieldUpdateOperationsInput
  audit_data: tenant2_NullableStringFieldUpdateOperationsInput
  updated_at: tenant2_NullableBigIntFieldUpdateOperationsInput
}

scalar tenant2_Bytes

input tenant3_NestedBigIntFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: tenant3_NestedBigIntFilter
}

input tenant3_BigIntFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: tenant3_NestedBigIntFilter
}

enum tenant3_QueryMode {
  default
  insensitive
}

input tenant3_NestedStringNullableFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: tenant3_NestedStringNullableFilter
}

input tenant3_StringNullableFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: tenant3_QueryMode
  not: tenant3_NestedStringNullableFilter
}

input tenant3_NestedBigIntNullableFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: tenant3_NestedBigIntNullableFilter
}

input tenant3_BigIntNullableFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: tenant3_NestedBigIntNullableFilter
}

input tenant3_A1_DummyEntity4WhereInput {
  AND: tenant3_A1_DummyEntity4WhereInput
  OR: [tenant3_A1_DummyEntity4WhereInput]
  NOT: tenant3_A1_DummyEntity4WhereInput
  record_id: tenant3_BigIntFilter
  TransactionID: tenant3_StringNullableFilter
  parent_id: tenant3_BigIntNullableFilter
  org_unit_id: tenant3_BigIntNullableFilter
  owner_id: tenant3_BigIntNullableFilter
  audit_data: tenant3_StringNullableFilter
  updated_at: tenant3_BigIntNullableFilter
}

enum tenant3_SortOrder {
  asc
  desc
}

input tenant3_A1_DummyEntity4OrderByWithRelationInput {
  record_id: tenant3_SortOrder
  TransactionID: tenant3_SortOrder
  parent_id: tenant3_SortOrder
  org_unit_id: tenant3_SortOrder
  owner_id: tenant3_SortOrder
  audit_data: tenant3_SortOrder
  updated_at: tenant3_SortOrder
}

input tenant3_A1_DummyEntity4WhereUniqueInput {
  record_id: BigInt
}

enum tenant3_A1_DummyEntity4ScalarFieldEnum {
  record_id
  TransactionID
  parent_id
  org_unit_id
  owner_id
  audit_data
  updated_at
}

type tenant3_A1_DummyEntity4 {
  record_id: BigInt!
  TransactionID: String
  parent_id: BigInt
  org_unit_id: BigInt
  owner_id: BigInt
  audit_data: String
  updated_at: BigInt
  _join: Query!
}

type tenant3_A1_DummyEntity4CountAggregateOutputType {
  record_id: Int!
  TransactionID: Int!
  parent_id: Int!
  org_unit_id: Int!
  owner_id: Int!
  audit_data: Int!
  updated_at: Int!
  _all: Int!
  _join: Query!
}

type tenant3_A1_DummyEntity4AvgAggregateOutputType {
  record_id: Float
  parent_id: Float
  org_unit_id: Float
  owner_id: Float
  updated_at: Float
  _join: Query!
}

type tenant3_A1_DummyEntity4SumAggregateOutputType {
  record_id: BigInt
  parent_id: BigInt
  org_unit_id: BigInt
  owner_id: BigInt
  updated_at: BigInt
  _join: Query!
}

type tenant3_A1_DummyEntity4MinAggregateOutputType {
  record_id: BigInt
  TransactionID: String
  parent_id: BigInt
  org_unit_id: BigInt
  owner_id: BigInt
  audit_data: String
  updated_at: BigInt
  _join: Query!
}

type tenant3_A1_DummyEntity4MaxAggregateOutputType {
  record_id: BigInt
  TransactionID: String
  parent_id: BigInt
  org_unit_id: BigInt
  owner_id: BigInt
  audit_data: String
  updated_at: BigInt
  _join: Query!
}

type tenant3_AggregateA1_DummyEntity4 {
  _count: tenant3_A1_DummyEntity4CountAggregateOutputType
  _avg: tenant3_A1_DummyEntity4AvgAggregateOutputType
  _sum: tenant3_A1_DummyEntity4SumAggregateOutputType
  _min: tenant3_A1_DummyEntity4MinAggregateOutputType
  _max: tenant3_A1_DummyEntity4MaxAggregateOutputType
  _join: Query!
}

input tenant3_A1_DummyEntity4CountOrderByAggregateInput {
  record_id: tenant3_SortOrder
  TransactionID: tenant3_SortOrder
  parent_id: tenant3_SortOrder
  org_unit_id: tenant3_SortOrder
  owner_id: tenant3_SortOrder
  audit_data: tenant3_SortOrder
  updated_at: tenant3_SortOrder
}

input tenant3_A1_DummyEntity4AvgOrderByAggregateInput {
  record_id: tenant3_SortOrder
  parent_id: tenant3_SortOrder
  org_unit_id: tenant3_SortOrder
  owner_id: tenant3_SortOrder
  updated_at: tenant3_SortOrder
}

input tenant3_A1_DummyEntity4MaxOrderByAggregateInput {
  record_id: tenant3_SortOrder
  TransactionID: tenant3_SortOrder
  parent_id: tenant3_SortOrder
  org_unit_id: tenant3_SortOrder
  owner_id: tenant3_SortOrder
  audit_data: tenant3_SortOrder
  updated_at: tenant3_SortOrder
}

input tenant3_A1_DummyEntity4MinOrderByAggregateInput {
  record_id: tenant3_SortOrder
  TransactionID: tenant3_SortOrder
  parent_id: tenant3_SortOrder
  org_unit_id: tenant3_SortOrder
  owner_id: tenant3_SortOrder
  audit_data: tenant3_SortOrder
  updated_at: tenant3_SortOrder
}

input tenant3_A1_DummyEntity4SumOrderByAggregateInput {
  record_id: tenant3_SortOrder
  parent_id: tenant3_SortOrder
  org_unit_id: tenant3_SortOrder
  owner_id: tenant3_SortOrder
  updated_at: tenant3_SortOrder
}

input tenant3_A1_DummyEntity4OrderByWithAggregationInput {
  record_id: tenant3_SortOrder
  TransactionID: tenant3_SortOrder
  parent_id: tenant3_SortOrder
  org_unit_id: tenant3_SortOrder
  owner_id: tenant3_SortOrder
  audit_data: tenant3_SortOrder
  updated_at: tenant3_SortOrder
  _count: tenant3_A1_DummyEntity4CountOrderByAggregateInput
  _avg: tenant3_A1_DummyEntity4AvgOrderByAggregateInput
  _max: tenant3_A1_DummyEntity4MaxOrderByAggregateInput
  _min: tenant3_A1_DummyEntity4MinOrderByAggregateInput
  _sum: tenant3_A1_DummyEntity4SumOrderByAggregateInput
}

input tenant3_NestedIntFilter {
  equals: Int
  in: [Int]
  notIn: [Int]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: tenant3_NestedIntFilter
}

input tenant3_NestedFloatFilter {
  equals: Float
  in: [Float]
  notIn: [Float]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: tenant3_NestedFloatFilter
}

input tenant3_NestedBigIntWithAggregatesFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: tenant3_NestedBigIntWithAggregatesFilter
  _count: tenant3_NestedIntFilter
  _avg: tenant3_NestedFloatFilter
  _sum: tenant3_NestedBigIntFilter
  _min: tenant3_NestedBigIntFilter
  _max: tenant3_NestedBigIntFilter
}

input tenant3_BigIntWithAggregatesFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: tenant3_NestedBigIntWithAggregatesFilter
  _count: tenant3_NestedIntFilter
  _avg: tenant3_NestedFloatFilter
  _sum: tenant3_NestedBigIntFilter
  _min: tenant3_NestedBigIntFilter
  _max: tenant3_NestedBigIntFilter
}

input tenant3_NestedIntNullableFilter {
  equals: Int
  in: [Int]
  notIn: [Int]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: tenant3_NestedIntNullableFilter
}

input tenant3_NestedStringNullableWithAggregatesFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: tenant3_NestedStringNullableWithAggregatesFilter
  _count: tenant3_NestedIntNullableFilter
  _min: tenant3_NestedStringNullableFilter
  _max: tenant3_NestedStringNullableFilter
}

input tenant3_StringNullableWithAggregatesFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: tenant3_QueryMode
  not: tenant3_NestedStringNullableWithAggregatesFilter
  _count: tenant3_NestedIntNullableFilter
  _min: tenant3_NestedStringNullableFilter
  _max: tenant3_NestedStringNullableFilter
}

input tenant3_NestedFloatNullableFilter {
  equals: Float
  in: [Float]
  notIn: [Float]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: tenant3_NestedFloatNullableFilter
}

input tenant3_NestedBigIntNullableWithAggregatesFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: tenant3_NestedBigIntNullableWithAggregatesFilter
  _count: tenant3_NestedIntNullableFilter
  _avg: tenant3_NestedFloatNullableFilter
  _sum: tenant3_NestedBigIntNullableFilter
  _min: tenant3_NestedBigIntNullableFilter
  _max: tenant3_NestedBigIntNullableFilter
}

input tenant3_BigIntNullableWithAggregatesFilter {
  equals: BigInt
  in: [BigInt]
  notIn: [BigInt]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: tenant3_NestedBigIntNullableWithAggregatesFilter
  _count: tenant3_NestedIntNullableFilter
  _avg: tenant3_NestedFloatNullableFilter
  _sum: tenant3_NestedBigIntNullableFilter
  _min: tenant3_NestedBigIntNullableFilter
  _max: tenant3_NestedBigIntNullableFilter
}

input tenant3_A1_DummyEntity4ScalarWhereWithAggregatesInput {
  AND: tenant3_A1_DummyEntity4ScalarWhereWithAggregatesInput
  OR: [tenant3_A1_DummyEntity4ScalarWhereWithAggregatesInput]
  NOT: tenant3_A1_DummyEntity4ScalarWhereWithAggregatesInput
  record_id: tenant3_BigIntWithAggregatesFilter
  TransactionID: tenant3_StringNullableWithAggregatesFilter
  parent_id: tenant3_BigIntNullableWithAggregatesFilter
  org_unit_id: tenant3_BigIntNullableWithAggregatesFilter
  owner_id: tenant3_BigIntNullableWithAggregatesFilter
  audit_data: tenant3_StringNullableWithAggregatesFilter
  updated_at: tenant3_BigIntNullableWithAggregatesFilter
}

type tenant3_A1_DummyEntity4GroupByOutputType {
  record_id: BigInt!
  TransactionID: String
  parent_id: BigInt
  org_unit_id: BigInt
  owner_id: BigInt
  audit_data: String
  updated_at: BigInt
  _count: tenant3_A1_DummyEntity4CountAggregateOutputType
  _avg: tenant3_A1_DummyEntity4AvgAggregateOutputType
  _sum: tenant3_A1_DummyEntity4SumAggregateOutputType
  _min: tenant3_A1_DummyEntity4MinAggregateOutputType
  _max: tenant3_A1_DummyEntity4MaxAggregateOutputType
  _join: Query!
}

input tenant3_A1_DummyEntity4CreateInput {
  record_id: BigInt!
  TransactionID: String
  parent_id: BigInt
  org_unit_id: BigInt
  owner_id: BigInt
  audit_data: String
  updated_at: BigInt
}

input tenant3_BigIntFieldUpdateOperationsInput {
  set: BigInt
  increment: BigInt
  decrement: BigInt
  multiply: BigInt
  divide: BigInt
}

input tenant3_NullableStringFieldUpdateOperationsInput {
  set: String
}

input tenant3_NullableBigIntFieldUpdateOperationsInput {
  set: BigInt
  increment: BigInt
  decrement: BigInt
  multiply: BigInt
  divide: BigInt
}

input tenant3_A1_DummyEntity4UpdateInput {
  record_id: tenant3_BigIntFieldUpdateOperationsInput
  TransactionID: tenant3_NullableStringFieldUpdateOperationsInput
  parent_id: tenant3_NullableBigIntFieldUpdateOperationsInput
  org_unit_id: tenant3_NullableBigIntFieldUpdateOperationsInput
  owner_id: tenant3_NullableBigIntFieldUpdateOperationsInput
  audit_data: tenant3_NullableStringFieldUpdateOperationsInput
  updated_at: tenant3_NullableBigIntFieldUpdateOperationsInput
}

input tenant3_A1_DummyEntity4CreateManyInput {
  record_id: BigInt!
  TransactionID: String
  parent_id: BigInt
  org_unit_id: BigInt
  owner_id: BigInt
  audit_data: String
  updated_at: BigInt
}

type tenant3_AffectedRowsOutput {
  count: Int!
  _join: Query!
}

input tenant3_A1_DummyEntity4UpdateManyMutationInput {
  record_id: tenant3_BigIntFieldUpdateOperationsInput
  TransactionID: tenant3_NullableStringFieldUpdateOperationsInput
  parent_id: tenant3_NullableBigIntFieldUpdateOperationsInput
  org_unit_id: tenant3_NullableBigIntFieldUpdateOperationsInput
  owner_id: tenant3_NullableBigIntFieldUpdateOperationsInput
  audit_data: tenant3_NullableStringFieldUpdateOperationsInput
  updated_at: tenant3_NullableBigIntFieldUpdateOperationsInput
}

scalar tenant3_Bytes

enum COMMON_REGEX_PATTERN {
  EMAIL
  DOMAIN
}

enum WG_ROLE {
  admin
  user
}

"""Well known claims - https://www.iana.org/assignments/jwt/jwt.xhtml"""
enum WG_CLAIM {
  """iss"""
  ISSUER
  """deprecated alias for ISSUER"""
  PROVIDER
  """sub"""
  SUBJECT
  """alias for sub"""
  USERID
  """name"""
  NAME
  """given_name"""
  GIVEN_NAME
  """family_name"""
  FAMILY_NAME
  """middle_name"""
  MIDDLE_NAME
  """nickname"""
  NICKNAME
  """preferred_username"""
  PREFERRED_USERNAME
  """profile"""
  PROFILE
  """picture"""
  PICTURE
  """website"""
  WEBSITE
  """email"""
  EMAIL
  """email_verified"""
  EMAIL_VERIFIED
  """gender"""
  GENDER
  """birthdate"""
  BIRTH_DATE
  """zoneinfo"""
  ZONE_INFO
  """locale"""
  LOCALE
  """location"""
  LOCATION
}

enum WunderGraphDateTimeFormat {
  """2006-01-02T15:04:05-0700"""
  ISO8601
  """Mon Jan _2 15:04:05 2006"""
  ANSIC
  """Mon Jan _2 15:04:05 MST 2006"""
  UnixDate
  """Mon Jan 02 15:04:05 -0700 2006"""
  RubyDate
  """02 Jan 06 15:04 MST"""
  RFC822
  """02 Jan 06 15:04 -0700"""
  RFC822Z
  """Monday, 02-Jan-06 15:04:05 MST"""
  RFC850
  """Mon, 02 Jan 2006 15:04:05 MST"""
  RFC1123
  """Mon, 02 Jan 2006 15:04:05 -0700"""
  RFC1123Z
  """2006-01-02T15:04:05Z07:00"""
  RFC3339
  """2006-01-02T15:04:05.999999999Z07:00"""
  RFC3339Nano
  """3:04PM"""
  Kitchen
  """Jan _2 15:04:05"""
  Stamp
  """Jan _2 15:04:05.000"""
  StampMilli
  """Jan _2 15:04:05.000000"""
  StampMicro
  """Jan _2 15:04:05.000000000"""
  StampNano
}